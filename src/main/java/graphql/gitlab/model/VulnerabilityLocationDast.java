package graphql.gitlab.model;

import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents the location of a vulnerability found by a DAST scan
 */
@Name("VulnerabilityLocationDast")
public class VulnerabilityLocationDast implements VulnerabilityLocation {

    /**
     * URL path and query string of the vulnerable request.
     */
    private String path;

    public String getPath() {
        return path;
    }

    public VulnerabilityLocationDast setPath(String path) {
        this.path = path;
        return this;
    }

    @JsonProperty("__typename")
    public String getTypename() {
        return "VulnerabilityLocationDast";
    }

    @JsonProperty("__typename")
    public void setTypename(String type) {
        //Setter only for Jackson
        if(!"VulnerabilityLocationDast".equals(type)) {
            throw new IllegalArgumentException("Unexpected '__typename' value: " + type);
        }
    }

    @Override
    public int hashCode() {
        return Objects.hash(path);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        VulnerabilityLocationDast other = (VulnerabilityLocationDast) obj;
        return Objects.equals(path, other.path);
    }

    @Override
    public String toString() {
        return "VulnerabilityLocationDast [path=" + path + "]";
    }

}

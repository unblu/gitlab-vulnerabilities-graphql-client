package graphql.gitlab.model;

import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents a vulnerability identifier
 */
@Name("VulnerabilityIdentifier")
public class VulnerabilityIdentifier {

    /**
     * External type of the vulnerability identifier.
     */
    private String externalType;

    /**
     * Name of the vulnerability identifier.
     */
    private String name;

    public String getExternalType() {
        return externalType;
    }

    public VulnerabilityIdentifier setExternalType(String externalType) {
        this.externalType = externalType;
        return this;
    }

    public String getName() {
        return name;
    }

    public VulnerabilityIdentifier setName(String name) {
        this.name = name;
        return this;
    }

    @JsonProperty("__typename")
    public String getTypename() {
        return "VulnerabilityIdentifier";
    }

    @JsonProperty("__typename")
    public void setTypename(String type) {
        //Setter only for Jackson
        if(!"VulnerabilityIdentifier".equals(type)) {
            throw new IllegalArgumentException("Unexpected '__typename' value: " + type);
        }
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalType, name);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        VulnerabilityIdentifier other = (VulnerabilityIdentifier) obj;
        return Objects.equals(externalType, other.externalType) && Objects.equals(name, other.name);
    }

    @Override
    public String toString() {
        return "VulnerabilityIdentifier [externalType=" + externalType + ", name=" + name + "]";
    }

}

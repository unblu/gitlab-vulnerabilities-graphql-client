package graphql.gitlab.model;

import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents an external issue link of a vulnerability
 */
@Name("VulnerabilityExternalIssueLink")
public class VulnerabilityExternalIssueLink {

    /**
     * The external issue attached to the issue link.
     */
    private ExternalIssue externalIssue;

    /**
     * GraphQL ID of the external issue link.
     */
    private VulnerabilitiesExternalIssueLinkID id;

    public ExternalIssue getExternalIssue() {
        return externalIssue;
    }

    public VulnerabilityExternalIssueLink setExternalIssue(ExternalIssue externalIssue) {
        this.externalIssue = externalIssue;
        return this;
    }

    public VulnerabilitiesExternalIssueLinkID getId() {
        return id;
    }

    public VulnerabilityExternalIssueLink setId(VulnerabilitiesExternalIssueLinkID id) {
        this.id = id;
        return this;
    }

    @JsonProperty("__typename")
    public String getTypename() {
        return "VulnerabilityExternalIssueLink";
    }

    @JsonProperty("__typename")
    public void setTypename(String type) {
        //Setter only for Jackson
        if(!"VulnerabilityExternalIssueLink".equals(type)) {
            throw new IllegalArgumentException("Unexpected '__typename' value: " + type);
        }
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalIssue, id);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        VulnerabilityExternalIssueLink other = (VulnerabilityExternalIssueLink) obj;
        return Objects.equals(externalIssue, other.externalIssue) && Objects.equals(id, other.id);
    }

    @Override
    public String toString() {
        return "VulnerabilityExternalIssueLink [externalIssue=" + externalIssue + ", id=" + id + "]";
    }

}

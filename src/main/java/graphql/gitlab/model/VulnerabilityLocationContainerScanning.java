package graphql.gitlab.model;

import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents the location of a vulnerability found by a container security scan
 */
@Name("VulnerabilityLocationContainerScanning")
public class VulnerabilityLocationContainerScanning implements VulnerabilityLocation {

    /**
     * URL of scanned image.
     */
    private String containerRepositoryUrl;

    /**
     * Name of the vulnerable container image.
     */
    private String image;

    public String getContainerRepositoryUrl() {
        return containerRepositoryUrl;
    }

    public VulnerabilityLocationContainerScanning setContainerRepositoryUrl(String containerRepositoryUrl) {
        this.containerRepositoryUrl = containerRepositoryUrl;
        return this;
    }

    public String getImage() {
        return image;
    }

    public VulnerabilityLocationContainerScanning setImage(String image) {
        this.image = image;
        return this;
    }

    @JsonProperty("__typename")
    public String getTypename() {
        return "VulnerabilityLocationContainerScanning";
    }

    @JsonProperty("__typename")
    public void setTypename(String type) {
        //Setter only for Jackson
        if(!"VulnerabilityLocationContainerScanning".equals(type)) {
            throw new IllegalArgumentException("Unexpected '__typename' value: " + type);
        }
    }

    @Override
    public int hashCode() {
        return Objects.hash(containerRepositoryUrl, image);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        VulnerabilityLocationContainerScanning other = (VulnerabilityLocationContainerScanning) obj;
        return Objects.equals(containerRepositoryUrl, other.containerRepositoryUrl) && Objects.equals(image, other.image);
    }

    @Override
    public String toString() {
        return "VulnerabilityLocationContainerScanning [containerRepositoryUrl=" + containerRepositoryUrl + ", image=" + image + "]";
    }

}
